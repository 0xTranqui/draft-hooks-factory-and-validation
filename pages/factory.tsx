import type { NextPage } from 'next'
import Head from 'next/head'
import { Header } from '../components/Header'
import { useFactory } from "../hooks/factory/useFactory"
import { useAuth } from "../hooks/useAuth"
import { useState, useEffect } from "react"
import { useContractWrite } from 'wagmi'

const factoryAddress = "0x6343A758F34E097a3122e0B9eCDe480BAe2E5C4B"
const curationPassAddress = "0xc3ed34368d7d8570c6fdd4b7f65dbcbf26f813ce"

const Factory: NextPage = () => {

  const [factoryInputs, setFactoryInputs] = useState({
    curationFactoryAddress: factoryAddress,
    curationTitle: "All at once",
    curationPassAddress: curationPassAddress,
    curationLimit: "0",
    curationBool: "false"
  })  

  const { address, ensName } = useAuth()

  //// helpful bits
  const { config } = useFactory(
    factoryInputs.curationFactoryAddress,
    factoryInputs.curationTitle,
    factoryInputs.curationPassAddress,
    factoryInputs.curationLimit,
    factoryInputs.curationBool,
  )

  const { write } = useContractWrite(config)
  ////

  return (
    <div className='flex flex-col justify-center h-screen min-h-screen'>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <main className="flex flex-row w-full flex-wrap justify-center items-center">        


      <div className=" sm:w-6/12 sm:h-full w-full h-6/12 flex flex-row flex-wrap content-start">
          <div className="text-white mt-20 sm:mt-10 flex flex-row justify-center h-fit w-full border-2 border-solid border-red-500 ">
            CREATE CONTRACT FROM FACTORY
          </div>                
          <div className="flex flex-row justify-center w-full h-fit border-2 border-white border-solid">
            <div className="flex flex-row w-full justify-center grid grid-cols-2">
              <div className="text-white text-center ">
              curationFactoryAddress
              </div>
              <input
                className="text-black text-center bg-slate-200"
                placeholder="curationContractAddress"
                type="text"
                value={factoryInputs.curationFactoryAddress}
                onChange={(e) => {
                    e.preventDefault();
                    setFactoryInputs(current => {
                      return {
                        ...current,
                        curationContractAddress: e.target.value
                      }
                    })
                }}
                required                    
              >
              </input>
            </div>            
          </div>
          <div className="flex flex-row justify-center w-full h-fit border-2 border-white border-solid">
            <div className="flex flex-row w-full justify-center grid grid-cols-2">
              <div className="text-white text-center ">
              curationTitle
              </div>
              <input
                className="text-black text-center bg-slate-200"
                placeholder="curationTitle"
                type="text"
                value={factoryInputs.curationTitle}
                onChange={(e) => {
                    e.preventDefault();
                    setFactoryInputs(current => {
                      return {
                        ...current,
                        curationTitle: e.target.value
                      }
                    })
                }}
                required                    
              >
              </input>
            </div>            
          </div>          
          <div className="flex flex-row justify-center w-full h-fit border-2 border-white border-solid">
            <div className="flex flex-row w-full justify-center grid grid-cols-2">
              <div className="text-white text-center ">
              curationPassAddress
              </div>
              <input
                className="text-black text-center bg-slate-200"
                placeholder="curationPassAddress"
                type="text"
                value={factoryInputs.curationPassAddress}
                onChange={(e) => {
                    e.preventDefault();
                    setFactoryInputs(current => {
                      return {
                        ...current,
                        curationPassAddress: e.target.value
                      }
                    })
                }}
                required                    
              >
              </input>
            </div>            
          </div>                 
          <div className="flex flex-row justify-center w-full h-fit border-2 border-white border-solid">
            <div className="flex flex-row w-full justify-center grid grid-cols-2">
              <div className="text-white text-center ">
              curationLimit
              </div>
              <input
                className="text-black text-center bg-slate-200"
                placeholder="curationLimit"
                type="text"
                value={factoryInputs.curationLimit}
                onChange={(e) => {
                    e.preventDefault();
                    setFactoryInputs(current => {
                      return {
                        ...current,
                        curationLimit: e.target.value
                      }
                    })
                }}
                required                    
              >
              </input>
            </div>            
          </div>                         
          <div className="flex flex-row justify-center w-full h-fit border-2 border-white border-solid">
            <div className="flex flex-row w-full justify-center grid grid-cols-2">
              <div className="text-white text-center ">
              curationBool
              </div>
              <input
                className="text-black text-center bg-slate-200"
                placeholder="curationBool"
                type="text"
                value={factoryInputs.curationBool}
                onChange={(e) => {
                    e.preventDefault();
                    setFactoryInputs(current => {
                      return {
                        ...current,
                        curationBool: e.target.value
                      }
                    })
                }}
                required                    
              >
              </input>
            </div>            
          </div>                             
          <div className="text-white flex flex-row justify-center w-full h-fit border-2 border-blue-500 border-solid">
            <button
              className="border-2 hover:bg-white hover:text-black border-solid border-blue-500 py-1 flex flex-row w-full justify-center"
              onClick={() => write()}
            >
              DEPLOY ON GOERLI
            </button>            
          </div>               
        </div>
              
      </main>
    </div>
  )
}

export default Factory